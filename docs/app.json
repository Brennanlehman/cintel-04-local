[{"name": "app.py", "content": "import plotly.express as px\nimport pandas as pd\nimport seaborn as sns\nimport plotly.graph_objects as go\nimport matplotlib\nimport matplotlib.pyplot as plt\nimport numpy as np\nfrom shiny.express import input, ui, render\nfrom shinywidgets import render_plotly, render_widget\nfrom palmerpenguins import load_penguins\nfrom shiny import reactive, render, req\n\n\n# Use the built-in function to load the Palmer Penguins dataset\npenguins_df = load_penguins()\n\nui.page_opts(title=\"Penguin Data Blehman\", fillable=True)\n\n@render_plotly\ndef plot1():\n    return px.histogram(\n        filtered_data(), \n        y=\"bill_length_mm\"\n    )\n\n@render_plotly\ndef plot2():\n    return px.histogram(\n        filtered_data(), \n        y=\"flipper_length_mm\"\n    )\n\nwith ui.sidebar(open=\"open\"):\n    ui.h2(\"Sidebar\")\n    ui.input_selectize(\n        \"selected_attribute\",\n        \"select attribute\",\n        [\"bill_length_mm\", \"flipper_length_mm\", \"body_mass_g\"],\n    )\n\n    # Use ui.input_numeric() to create a numeric input for the number of Plotly histogram bins\n    ui.input_numeric(\"plotly_bin_count\", \"Bin Counts\", 1, min=1, max=10)  \n\n    # Use ui.input_slider() to create a slider input for the number of Seaborn bins\n    ui.input_slider(\"seaborn_bin_count\", \"Seaborn Bin Count\", 1, 80, 40)\n\n    # Use ui.input_checkbox_group() to create a checkbox group input to filter the species\n    ui.input_checkbox_group(  \n        \"selected_species_list\",\n        \"select species\",\n        [\"Adelie\", \"Gentoo\", \"Chinstrap\"],\n        selected=[\"Adelie\", \"Chinstrap\"],\n        inline=True,\n    )\n\n    # TESTING TESTING TESTing\n        # Use ui.input_checkbox_group() to create a checkbox group input to filter the islands\n    ui.input_checkbox_group(  \n        \"penguin_islands\",\n        \"Islands\",\n        [\"Torgersen\", \"Biscoe\", \"Dream\"],\n        selected=[\"Dream\"],\n        inline=True,\n    )\n\n\n# Use ui.hr() to add a horizontal rule to the sidebar\nui.hr()\n\n# Use ui.a() to add a hyperlink to the sidebar\nui.a(\n        \"Brennan Lehman GitHub Repo\",\n        href=\"https://github.com/Brennanlehman/cintel-02-data/tree/main\",\n        target=\"_blank\",\n    )\n\n# Main content\n\n# Define UI\n# Displaying Data Table\nwith ui.card(full_screen=True):\n        ui.card_header(\"Penguins Data Table\")\n        @render.data_frame\n        def render_penguins_table():\n            return filtered_data()\n\n# Displaying Data Grid\nwith ui.card(full_screen=True):  # Full screen option\n        ui.card_header(\"Penguins Data Grid\")\n        @render.data_frame\n        def render_penguins_grid():\n            return filtered_data()\n\n# Use ui.hr() to add a horizontal rule to the sidebar\nui.hr()\n\nui.page_opts(fillable=False)\n\nwith ui.navset_card_tab():  \n    with ui.nav_panel(\"Plotly Histogram\"):\n        @render_plotly\n        def render_plotly_histogram():\n            # Create a Plotly histogram\n            fig = px.histogram(\n                filtered_data(), \n                x=\"species\", \n                color=\"island\", \n                title=\"Palmer Penguins\"\n            )\n            return fig\n\n    with ui.nav_panel(\"Seaborn Histogram\"):\n        @render.plot(alt=\"A Seaborn histogram on penguin species by island.\")\n        def plot(): \n            ax = sns.histplot(filtered_data(), x=\"island\", y=\"species\") \n            ax.set_title(\"Seaborn Palmer Penguins\")\n            ax.set_xlabel(\"Island\")\n            ax.set_ylabel(\"Species\")\n            return ax \n\n\n    with ui.nav_panel(\"Plotly Scatterplot: Species\"):\n        @render_plotly\n        def plotly_scatterplot():\n        # Create a Plotly scatterplot using Plotly Express\n            return px.scatter(filtered_data(), x=\"body_mass_g\", y=\"year\", color=\"species\", \n                          facet_row=\"species\", facet_col=\"sex\", title=\"Penguin Scatterplot\", labels={\"body_mass_g\": \"Body Mass g\", \"year\": \"Year\"})\n\n# Use ui.hr() to add a horizontal rule to the sidebar\nui.hr()\n\n\n# --------------------------------------------------------\n# Reactive calculations and effects\n# --------------------------------------------------------\n\n# Add a reactive calculation to filter the data\n# By decorating the function with @reactive, we can use the function to filter the data\n# The function will be called whenever an input functions used to generate that output changes.\n# Any output that depends on the reactive function (e.g., filtered_data()) will be updated when the data changes.\n\n# --------------------------------------------------------\n# Reactive calculations and effects\n# --------------------------------------------------------\n\n# Add a reactive calculation to filter the data\n# By decorating the function with @reactive, we can use the function to filter the data\n# The function will be called whenever an input functions used to generate that output changes.\n# Any output that depends on the reactive function (e.g., filtered_data()) will be updated when the data changes.\n\n@reactive.calc\ndef filtered_data():\n    return penguins_df[\n        (penguins_df[\"species\"].isin(input.selected_species_list())) &\n        (penguins_df[\"island\"].isin(input.penguin_islands()))]\n", "type": "text"}]